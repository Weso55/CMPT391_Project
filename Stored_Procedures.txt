So you can only run these one at a time like when Creating Views. just copy and paste them in sql management studio
-----------------------------------------
CREATE PROCEDURE Sign_in
@username varchar(50)
AS
BEGIN
    SELECT Name
    FROM Students
    Where Student_ID = @username;
END;
-----------------------------------------
CREATE PROCEDURE Enrolled_Startup_Data
@id Int
AS
BEGIN
    SELECT *
    FROM Enrolled
    Where Student_ID = @id;
END;
------------------------------------------
CREATE PROCEDURE Enrolled_Filter
@id int,
@sem varchar(50),
@yr varchar(50)

AS
BEGIN
	if @sem = 'null'
	Begin
	set @sem = '%'
	END

	if @yr = 'null'
	Begin
	set @yr = '%'
	END

	select * from Enrolled where Student_ID = @id and Semester like @sem and Year like @yr
END;
---------------------------------------------------------------------------------------------
CREATE PROCEDURE Course_Startup_Data
@yr int
AS
BEGIN
    SELECT *
    FROM Courses
	where Year = @yr
END;
---------------------------------------------------------------------------------------------
CREATE PROCEDURE Course_Filter
@name varchar(50),
@sect varchar(50),
@dept varchar(50),
@sem varchar(50),
@yr varchar(50)

AS
BEGIN
	if @name = 'null'
	Begin
	set @name = '%'
	END

	if @sect = 'null'
	Begin
	set @sect = '%'
	END

	if @dept = 'null'
	Begin
	set @dept = '%'
	END

	if @sem = 'null'
	Begin
	set @sem = '%'
	END

	if @yr = 'null'
	Begin
	set @yr = '%'
	END

	select * from Courses where Courses.Name like @name and Section_ID like @sect and  Department_ID like @dept and Semester like @sem and Year like @yr
END;
---------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE Detail_Startup_Data
@course_id int,
@sem varchar(50),
@yr varchar(50),
@sect varchar(50)
AS
BEGIN
	select * from detail where Class_ID = @course_id and Semester = @sem and Year = @yr and S_ID = @sect
END;
--------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE Enrolled_Course_Count
@course_id int,
@sem varchar(50),
@yr varchar(50),
@sect varchar(50)
AS
BEGIN
	select COUNT(Course_ID) AS num from Enrolled where Course_ID = @course_id and Semester = @sem and Year = @yr and Section_ID = @sect
END;
---------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE Detail_Prereq
@course_id int

AS
BEGIN
	SELECT Prereq.prereq_id, isnull(Name, 'None') AS Name
                       FROM Prereq
                       LEFT JOIN (SELECT distinct Prereq.Course_id, Name FROM Courses,Prereq WHERE Courses.Course_ID = Prereq.Course_id) AS PR
                       ON Prereq.prereq_id = PR.Course_id
                       WHERE Prereq.Course_id =  @course_id
END;
-------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE Enroll_Student
@user_id int,
@course_id int,
@sect varchar(50),
@sem varchar(50),
@yr varchar(50)

AS
BEGIN
	INSERT INTO Enrolled (Student_ID, Course_ID, Section_ID, Semester, Year) values (@user_id,@course_id,@sect,@sem,@yr); 
END;
------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE Delete_Student
@user_id int,
@course_id int,
@sect varchar(50),
@sem varchar(50),
@yr varchar(50)

AS
BEGIN
	Delete from Enrolled where Student_ID = @user_id and Course_ID = Course_ID and Section_ID = @sect and Semester = @sem and Year = @yr
END;
